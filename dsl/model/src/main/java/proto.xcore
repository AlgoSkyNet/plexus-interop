/**
 * Copyright 2017 Plexus Interop Deutsche Bank AG
 * SPDX-License-Identifier: Apache-2.0
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
@Ecore(nsPrefix="proto",nsURI="http://www.db.com/plexus/interop/dsl/protobuf")
@GenModel(
    bundleManifest="false",
    modelDirectory="model/build/xcore/main", 
    complianceLevel="8.0"
)

package com.db.plexus.interop.dsl.protobuf

interface NamedElement {
	String name	
}

class Proto {
	ProtoSyntax syntax
	contains ProtoElement[] elements	
}

enum ProtoSyntax {
	None,
	Proto2,
	Proto3
}

class ProtoElement {	
}

class Package extends ProtoElement {
	String importedNamespace	
}

class Import extends ProtoElement {
	String importURI
	ImportModifier modifier
}

class Extend extends ProtoElement {
	refers Message message
	contains ExtendBody body 
}

class ExtendBody {
	contains ExtendBodyElement[] elements	
}

class ExtendBodyElement {	
}

enum ImportModifier {
	None,
	Public,
	Weak
}

class Option extends ProtoElement, MessageBodyElement, ServiceBodyElement, MethodBodyElement, EnumBodyElement {
	String name	
	String value
}

class OptionList {
	contains Option[] elements
}

class ProtoDefinition extends ProtoElement, NamedElement {	
}

class ComplexType extends NamedElement {
}

class Message extends ComplexType, ProtoDefinition, MessageBodyElement {
	contains MessageBody body	
}

class MessageBody {
	contains MessageBodyElement[] elements 	
}

class MessageBodyElement {	
}

class Enum extends ComplexType, ProtoDefinition, MessageBodyElement {	
	contains EnumBody body	
}

class EnumBody {
	contains EnumBodyElement[] elements	
}

class EnumBodyElement {	
}

class EnumValue extends EnumBodyElement {
	String name
	Integer value
	contains OptionList options	
}

class Service extends ProtoDefinition {	
	contains ServiceBody body
}

class ServiceBody {
	contains ServiceBodyElement[] elements	
}

class ServiceBodyElement {
}

class Method extends ServiceBodyElement {	
	String name	
	contains MethodData request
	contains MethodData response
	contains MethodBody body
}

class MethodData {
	refers Message message
	Boolean isStream = "false" 	
}

class MethodBody {
	contains MethodBodyElement[] elements
}

class MethodBodyElement {	
}

class Field extends MessageBodyElement, ExtendBodyElement {
	String name	
	Integer number
	FieldLabel label
	contains FieldTypeReference typeReference	
	contains OptionList options
}

class Group extends MessageBodyElement, ExtendBodyElement {
	String name	
	Integer number	
	FieldLabel label
	contains MessageBody body
}

enum FieldLabel {
	None
	Optional,
	Required, 	
	Repeated
}

class FieldTypeReference {	
}

enum PrimitiveType
{
	DOUBLE
	FLOAT,
	INT32,
	INT64,
	UINT32,
	UINT64,
	SINT32,
	SINT64,
	FIXED32,
	FIXED64,
	SFIXED32,
	SFIXED64,
	BOOl,
	STRING,
	BYTES
}

class PrimitiveFieldType extends FieldTypeReference {
	PrimitiveType value
}

class ComplexFieldType extends FieldTypeReference {
	refers ComplexType value
}

class OneOf extends MessageBodyElement {
	String name
	contains Field[] fields
}

class MapField extends MessageBodyElement {
	String name
	PrimitiveType keyType 
	contains FieldTypeReference valueType
	Integer number
	contains OptionList options		
}

class Reserved extends MessageBodyElement {
	contains ReservedFields fields	
}

class ReservedFields {	
}

class FieldNames extends ReservedFields {
	String[] elements
}

class FieldRanges extends ReservedFields {
	contains FieldRange[] elements
}

class FieldRange {
	Integer from
	Integer to
	Boolean toUnbounded = "false"
}

class Extensions extends MessageBodyElement {
	contains FieldRanges fields		
}